name: Release

on:
  release:
    types: [published]
  workflow_dispatch:
    inputs:
      publish:
        description: 'Whether to publish to PyPI'
        required: true
        default: 'false'
      tag:
        description: 'Tag to use for release'
        required: false

permissions:
  contents: write
  id-token: write

jobs:
  build:
    name: Build wheel and sdist
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3.6.0

    - name: Set up Python
      uses: actions/setup-python@v4.7.0
      with:
        python-version: "3.10"

    - name: Upgrade pip
      env:
        PIP_CONSTRAINT: .github/workflows/constraints.txt
      run: |
        pip install pip
        pip --version

    - name: Install Poetry
      env:
        PIP_CONSTRAINT: .github/workflows/constraints.txt
      run: |
        pipx install poetry
        poetry --version

    - name: Build
      run: poetry build

    - name: Upload artifacts
      uses: actions/upload-artifact@v3.1.2
      with:
        name: dist
        path: dist

  publish:
    name: Publish to PyPI
    runs-on: ubuntu-latest
    if: github.event_name == 'release' || github.event.inputs.publish == 'true'
    needs: [build]
    steps:
    - name: Checkout code
      uses: actions/checkout@v3.6.0

    - name: Set up Python
      uses: actions/setup-python@v4.7.0
      with:
        python-version: "3.10"

    - name: Upgrade pip
      env:
        PIP_CONSTRAINT: .github/workflows/constraints.txt
      run: |
        pip install pip
        pip --version

    - name: Install Poetry
      env:
        PIP_CONSTRAINT: .github/workflows/constraints.txt
      run: |
        pipx install poetry
        poetry --version

    - name: Check version
      run: |
        version=$(poetry version | awk '{print $2}')
        tag=$(echo "${{ github.event.inputs.tag || github.ref }}" | awk '{split($0,p,"/"); print p[3]}')
        if [ $version != $tag ]; then echo "Release tag and package version do not match!"; exit 1; fi;

    - name: Download artifacts
      uses: actions/download-artifact@v3.0.2
      with:
        name: dist
        path: dist

    - name: Publish
      uses: pypa/gh-action-pypi-publish@v1.8.10

    # Move this up when PyPI supports signing
    - uses: sigstore/gh-action-sigstore-python@v2.0.1
      with:
        inputs: dist/*

    - name: Upload wheel to release
      uses: svenstaro/upload-release-action@v2
      with:
        file: dist/*.whl
        tag: ${{ github.event.inputs.tag || github.ref }}
        overwrite: true
        file_glob: true
