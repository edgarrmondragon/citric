[project]
name = "citric"
version = "0.7.1-b3"
description = "A client to the LimeSurvey Remote Control API 2, written in modern Python."
readme = "README.md"
requires-python = ">=3.7.0"
license = { file = "LICENSE" }
keywords = ["limesurvey", "json-rpc"]
classifiers = [
  "Development Status :: 5 - Production/Stable",
  "Intended Audience :: Developers",
  "License :: OSI Approved :: MIT License",
  "Natural Language :: English",
  "Operating System :: OS Independent",
  "Programming Language :: Python :: 3.7",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: Implementation :: CPython",
  "Programming Language :: Python :: Implementation :: PyPy",
  "Topic :: Software Development :: Libraries :: Python Modules",
  "Typing :: Typed",
]
dependencies = [
  "importlib_metadata >= 1.6 ; python_version < '3.8'",
  "requests >= 2.23.0, < 3",
]

[[project.authors]]
name = "Edgar Ramírez-Mondragón"
email = "edgarrm358@gmail.com"

[[project.maintainers]]
name = "Edgar Ramírez-Mondragón"
email = "edgarrm358@gmail.com"

[project.optional-dependencies]
dev = [
  "colorama >= 0.4.5, < 1",
  "coverage[toml] >= 7.0.1, < 8",
  "pytest >= 7.3.1, < 8",
  "pytest-github-actions-annotate-failures >= 0.1.7, < 1",
  "safety >=2.1.1, < 3",
  "typing-extensions >= 4.4.0, < 5 ; python_version < '3.12'",
  "xdoctest >= 1.0.2, < 2",
]
docs = [
  "furo >= 2022.12.7",
  "myst-parser >= 1.0.0, < 2",
  "sphinx < 7",
  "sphinx-autoapi >= 2.1.0, < 3.0.0",
  "sphinx-autobuild >= 2021.3.14",
  "sphinx-autodoc-typehints >= 1.22, < 2",
  "sphinx-copybutton >= 0.5.1, < 1"
]

[project.urls]
homepage = "https://github.com/edgarrmondragon/citric"
documentation = "https://citric.readthedocs.io"
repository = 'https://github.com/edgarrmondragon/citric'
changelog = "https://github.com/edgarrmondragon/citric/blob/main/CHANGELOG.md"
"Issue Tracker" = "https://github.com/edgarrmondragon/citric/issues"

[tool.black]
line-length = 88

[tool.poetry]
exclude = []
include = []
packages = []

[tool.pytest.ini_options]
addopts = '-vvv'
markers = [
  "integration_test: Integration and end-to-end tests",
  "version(ref): Mark a test that depends on a specific version of LimeSurvey",
  "xfail_mysql: Mark a test as expected to fail on MySQL",
]

[tool.coverage.paths]
source = ["src", "*/site-packages"]

[tool.coverage.run]
branch = true
source = ["citric"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    '''if (t\.)?TYPE_CHECKING:''',
]
fail_under = 90
omit = [
  "src/citric/types.py",
]
show_missing = true

[tool.mypy]
enable_incomplete_feature = "Unpack"
warn_unreachable = true
warn_unused_configs = true
warn_unused_ignores = true

[[tool.mypy.overrides]]
ignore_missing_imports = true
module = [
  "nox.*",
  "nox_poetry.*",
  "pytest.*",
]

[tool.ruff]
ignore = [
  "ANN101", # missing-type-self
  "DJ", # flake8-django
]
line-length = 88
select = ["ALL"]
src = ["src", "tests", "docs"]
target-version = "py37"

[tool.ruff.per-file-ignores]
"docs/notebooks/*" = ["D100", "INP001"]
"src/*" = ["PD"]
"tests/*" = [
  "ARG00",
  "C901",
  "S101",
  "S105",
  "S106",
  "ANN201",
  "PLR2004",
  "SLF001",
]

[tool.ruff.flake8-quotes]
docstring-quotes = "double"
inline-quotes = "double"
multiline-quotes = "double"

[tool.ruff.flake8-annotations]
allow-star-arg-any = true
mypy-init-return = true
suppress-dummy-args = true

[tool.ruff.flake8-errmsg]
max-string-length = 30

[tool.ruff.flake8-import-conventions]
banned-from = ["typing"]

[tool.ruff.flake8-import-conventions.extend-aliases]
typing = "t"

[tool.ruff.flake8-pytest-style]
fixture-parentheses = false
mark-parentheses = false

[tool.ruff.isort]
known-first-party = ["citric"]
required-imports = ["from __future__ import annotations"]

[tool.ruff.mccabe]
max-complexity = 5

[tool.ruff.pydocstyle]
convention = "google"

[tool.ruff.pylint]
max-args = 10

[build-system]
build-backend = "poetry.core.masonry.api"
requires = [
  "poetry-core @ git+https://github.com/python-poetry/poetry-core.git@refactor/multiple-project-type-take-2",
]
