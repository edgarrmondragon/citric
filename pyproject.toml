[build-system]
build-backend = "hatchling.build"
requires = [
  "hatch-vcs",
  "hatchling",
]

[project]
name = "citric"
description = "A client to the LimeSurvey Remote Control API 2, written in modern Python."
readme = "README.md"
keywords = [
  "json-rpc",
  "limesurvey",
]
license = { file = "LICENSE" }
maintainers = [
  { name = "Edgar Ramírez-Mondragón", email = "edgarrm358@gmail.com" },
]
authors = [
  { name = "Edgar Ramírez-Mondragón", email = "edgarrm358@gmail.com" },
]
requires-python = ">=3.8"
classifiers = [
  "Development Status :: 5 - Production/Stable",
  "Intended Audience :: Developers",
  "Intended Audience :: Information Technology",
  "Intended Audience :: Science/Research",
  "Intended Audience :: System Administrators",
  "License :: OSI Approved :: MIT License",
  "Natural Language :: English",
  "Operating System :: OS Independent",
  "Programming Language :: Python :: 3 :: Only",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3.13",
  "Programming Language :: Python :: 3.14",
  "Programming Language :: Python :: Implementation :: CPython",
  "Programming Language :: Python :: Implementation :: PyPy",
  "Topic :: Software Development :: Libraries :: Python Modules",
  "Typing :: Typed",
]
dynamic = [
  "version",
]
dependencies = [
  "requests>=2.25.1",
]
optional-dependencies.dev = [
  "citric[docs,tests,typing]",
  "colorama>=0.4.6",
  "deptry>=0.12",
  "requests-cache>=1.1",
]
optional-dependencies.docs = [
  "autodocsumm>=0.2.5",          # 0.2.4 has a problematic dependency 'Sphinx>=2.2.*'
  "docutils>=0.20",
  "furo>=2024.1.29",
  "myst-parser>=2",
  "sphinx>=7",
  "sphinx-autoapi>=3",
  "sphinx-autobuild>=2021.3.14",
  "sphinx-copybutton>=0.5.2",
  "sphinx-hoverxref>=1.3",
  "sphinx-notfound-page>=1",
]
optional-dependencies.tests = [
  "coverage[toml]>=7.4.2",
  "faker>=19",
  "pytest>=8",
  "pytest-github-actions-annotate-failures>=0.1.7",
  "pytest-httpserver>=1.0.8",
  "pytest-reverse>=1.7",
  "pytest-subtests>=0.11",
  "python-dotenv>=1",
  "semver>=3.0.1",
  "tinydb>=4.8",
  "xdoctest[colors]>=1.1.1",
]
optional-dependencies.typing = [
  "citric[tests]",
  "mypy>=1.9",
  "sphinx",
  "types-requests>=2.31.0.2",
  "typing-extensions>=4.6; python_version<'3.12'",
]
urls.Documentation = "https://citric.readthedocs.io"
urls.Homepage = 'https://github.com/edgarrmondragon/citric'
urls."Issue Tracker" = "https://github.com/edgarrmondragon/citric/issues"
urls.Repository = "https://github.com/edgarrmondragon/citric"

[tool.hatch.version]
source = "vcs"

[tool.ruff]
line-length = 88
src = [
  "docs",
  "src",
  "tests",
]

include = [
  "**/pyproject.toml",
  "*.ipynb",
  "*.py",
  "*.pyi",
]
# Enable preview style formatting.
format.preview = true
format.docstring-code-format = true
lint.select = [
  "A",    # flake8-builtins
  "ANN",  # flake8-annotations
  "ARG",  # flake8-unused-arguments
  "B",    # flake8-bugbear
  "BLE",  # flake8-blind-except
  "C4",   # flake8-comprehensions
  "C90",  # mccabe
  "COM",  # flake8-commas
  "D",    # pydocstyle
  "DTZ",  # flake8-datetimez
  "E",    # pycodestyle (error)
  "EM",   # flake8-errmsg
  "ERA",  # flake8-eradicate
  "F",    # Pyflakes
  "FA",   # flake8-future-annotations
  "FBT",  # flake8-boolean-trap
  "FIX",  # flake8-fixme
  "FLY",  # flynt
  "FURB", # refurb
  "G",    # flake8-logging-format
  "I",    # isort
  "ICN",  # flake8-import-conventions
  "INP",  # flake8-no-pep420
  "ISC",  # flake8-implicit-str-concat
  "LOG",  # flake8-logging
  "N",    # pep8-naming
  "PD",   # pandas-vet
  "PERF", # perflint
  "PGH",  # pygrep-hooks
  "PIE",  # flake8-pie
  "PLC",  # pylint
  "PLE",  # pylint
  "PLR",  # pylint
  "PLW",  # pylint
  "PT",   # flake8-pytest-style
  "PTH",  # flake8-use-pathlib
  "Q",    # flake8-quotes
  "RET",  # flake8-return
  "RSE",  # flake8-raise
  "RUF",  # Ruff-specific rules
  "S",    # bandit
  "SIM",  # flake8-simplify
  "SLF",  # flake8-self
  "SLOT", # flake8-slots
  "T10",  # flake8-debugger
  "T20",  # flake8-print
  "TCH",  # flake8-type-checking
  "TD",   # flake8-todos
  "TID",  # flake8-tidy-imports
  "TRY",  # tryceratops
  "UP",   # pyupgrade
  "W",    # pycodestyle (warning)
  "YTT",  # flake8-2020
]
lint.ignore = [
  "ANN101", # missing-type-self
  "COM812", # missing-trailing-comma
  "D107",   # undocumented-public-init
  "DJ",     # flake8-django
  "FIX002", # line-contains-todo
  "ISC001", # single-line-implicit-string-concatenation
]
lint.explicit-preview-rules = false
lint.per-file-ignores."docs/notebooks/*" = [
  "D100",   # undocumented-public-module
  "E402",   # module-import-not-at-top-of-file
  "I002",   # missing-required-import
  "INP001", # implicit-namespace-package
]
lint.per-file-ignores."src/*" = [
  "PD", # pandas-vet
]
lint.per-file-ignores."tests/*" = [
  "ANN201",  # missing-return-type-undocumented-public-function
  "ARG00",   # unused-method-argument
  "C901",    # complex-structure
  "PLR2004", # magic-value-comparison
  "PLR6301", # no-self-use
  "S101",    # assert
  "S105",    # hardcoded-password-string
  "S106",    # hardcoded-password-func-arg
  "SLF001",  # private-member-access
]
lint.unfixable = [
  "ERA", # Don't remove commented out code
]
lint.flake8-annotations.allow-star-arg-any = true
lint.flake8-annotations.mypy-init-return = true
lint.flake8-annotations.suppress-dummy-args = true
lint.flake8-errmsg.max-string-length = 30
lint.flake8-import-conventions.banned-from = [
  "typing",
]
lint.flake8-import-conventions.extend-aliases.typing = "t"
lint.flake8-pytest-style.fixture-parentheses = false
lint.flake8-pytest-style.mark-parentheses = false
lint.flake8-quotes.docstring-quotes = "double"
lint.flake8-quotes.inline-quotes = "double"
lint.flake8-quotes.multiline-quotes = "double"
lint.isort.known-first-party = [
  "citric",
]
lint.isort.required-imports = [
  "from __future__ import annotations",
]
lint.mccabe.max-complexity = 5
lint.pydocstyle.convention = "google"
lint.pylint.max-args = 10
lint.preview = true

[tool.codespell]
ignore-words-list = "socio-economic"
skip = ".mypy_cache,.nox,.ruff_cache,build,docs/index.md,docs/requirements.txt"

[tool.deptry]
pep621_dev_dependency_groups = [
  "dev",
  "docs",
]

[tool.deptry.package_module_name_map]
types-requests = "requests"
typing-extensions = "typing_extensions"

[tool.deptry.per_rule_ignores]
DEP001 = [
  # Notebook dependencies
  "boto3",
  "IPython",
  "pandas",
  "sqlalchemy",
]
DEP002 = [
  "coverage",
  "faker",
  "mypy",
  "pytest",
  "pytest-github-actions-annotate-failures",
  "pytest-httpserver",
  "pytest-reverse",
  "pytest-subtests",
  "python-dotenv",
  "semver",
  "tinydb",
  "xdoctest",
]
DEP004 = [
  "docutils",
]

[tool.pyproject-fmt]
max_supported_python = "3.14"

[tool.pytest.ini_options]
addopts = [
  "-vvv",
  "--reverse",
  "-ra",              # show extra test summary info for all except passed
  "--strict-config",
  "--strict-markers",
]
filterwarnings = [
  "error",
  "ignore::citric._compat.FutureVersionWarning",
]
log_cli_level = "INFO"
markers = [
  "integration_test: Integration and end-to-end tests",
  "xfail_mysql: Mark a test as expected to fail on MySQL",
]
minversion = "8"
testpaths = [
  "tests",
]
xfail_strict = true

[tool.coverage.paths]
package = [
  "src/citric/",
  "*/site-packages/citric/",
]

[tool.coverage.run]
branch = true
parallel = true
source = [
  "citric",
]
relative_files = true

[tool.coverage.report]
exclude_also = [
  '''if (t\.)?TYPE_CHECKING:''',
]
fail_under = 85
omit = [
  "src/citric/types.py",
]
precision = 2
show_missing = true

[tool.mypy]
enable_error_code = [
  "ignore-without-code",
  "redundant-expr",
  "truthy-bool",
]
local_partial_types = true
strict = false
warn_no_return = true
warn_redundant_casts = true
warn_unreachable = true
warn_unused_configs = true
warn_unused_ignores = true

[[tool.mypy.overrides]]
ignore_missing_imports = true
module = [
  "nox.*",
  "pytest_subtests.*", # TODO: Remove after https://github.com/pytest-dev/pytest-subtests/pull/115 is published
]
