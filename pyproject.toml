[tool.poetry]
authors = ["Edgar Ramírez-Mondragón <edgarrm358@gmail.com>"]
classifiers = [
  "Development Status :: 5 - Production/Stable",
  "Intended Audience :: Developers",
  "License :: OSI Approved :: MIT License",
  "Natural Language :: English",
  "Operating System :: OS Independent",
  "Programming Language :: Python :: 3.7",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: Implementation :: CPython",
  "Programming Language :: Python :: Implementation :: PyPy",
  "Topic :: Software Development :: Libraries :: Python Modules",
  "Typing :: Typed",
]
description = "A client to the LimeSurvey Remote Control API 2, written in modern Python."
documentation = "https://citric.readthedocs.io"
homepage = 'https://github.com/edgarrmondragon/citric'
keywords = ["limesurvey", "json-rpc"]
license = "MIT"
maintainers = ["Edgar Ramírez-Mondragón <edgarrm358@gmail.com>"]
name = "citric"
readme = "README.md"
repository = 'https://github.com/edgarrmondragon/citric'
version = "0.4.1"

[tool.poetry.urls]
"Issue Tracker" = "https://github.com/edgarrmondragon/citric/issues"

[tool.poetry.dependencies]
importlib_metadata = {version = ">=1.6,<5.0", python = "<3.8"}
python = "^3.7.0"
requests = "^2.23.0"

# Docs
furo = {version = "2022.4.7", optional = true}
myst-parser = {version = "0.17.2", optional = true}
sphinx = {version = "4.5.0", optional = true}
sphinx-autoapi = {version = "1.8.4", optional = true}
sphinx-autobuild = {version = "^2021.3.14", optional = true}
sphinx-autodoc-typehints = {version = "1.18.1", optional = true}
sphinx-copybutton = {version = "^0.5.0", optional = true}

[tool.poetry.group.dev.dependencies]
codecov = "^2.1.4"
colorama = "^0.4.5"
coverage = {extras = ["toml"], version = "^6.4"}
pytest = "^7.1.2"
pytest-github-actions-annotate-failures = "^0.1.7"
safety = "^2.1.1"
xdoctest = "^1.0.2"

[tool.poetry.extras]
docs = [
  "furo",
  "myst-parser",
  "sphinx",
  "sphinx-autoapi",
  "sphinx-autobuild",
  "sphinx-autodoc-typehints",
  "sphinx-copybutton",
]

[tool.coverage.paths]
source = ["src", "*/site-packages"]

[tool.coverage.run]
branch = true
source = ["citric"]

[tool.coverage.report]
fail_under = 90
show_missing = true

[tool.black]
line-length = 88

[tool.isort]
add_imports = [
  "from __future__ import annotations",
]
include_trailing_comma = true
known_first_party = "citric"
multi_line_output = 3 # Vertical Hanging Indent
profile = "black"
src_paths = "citric"
use_parentheses = true

[tool.pytest.ini_options]
addopts = '-vvv'
markers = [
  "integration_test: Integration and end-to-end tests",
]

[[tool.mypy.overrides]]
ignore_missing_imports = true
module = [
  "nox.*",
  "nox_poetry.*",
  "pytest.*",
]

[tool.ruff]
extend-ignore = [
  # equivalent to `--docstring-convention=google`
  "D203",
  "D204",
  "D213",
  "D215",
  "D400",
  "D404",
  "D406",
  "D407",
  "D408",
  "D409",
  "D413",
]
ignore = [
  "ANN101",
]
line-length = 88
select = [
  "F", # Pyflakes
  "E", # pycodestyle (error)
  "W", # pycodestyle (warning)
  "C9", # mccabe
  "I0", # isort
  "D", # pydocstyle (with google style docstring convention)
  "UP", # pyupgrade
  "N8", # pep8-naming
  "YTT", # flake8-2020
  "ANN", # flake8-annotations
  "S", # flake8-bandit
  "BLE", # flake8-blind-except
  "FBT", # flake8-boolean-trap
  "B0", # flake8-bugbear
  "A0", # flake8-builtins
  "C4", # flake8-comprehensions
  "T1", # flake8-debugger
  "ICN", # flake8-import-conventions
  "T2", # flake8-print
  "Q", # flake8-quotes
  "RET", # flake8-return
  "TID", # flake8-tidy-imports
  "ARG", # flake8-unused-arguments
  "ERA", # eradicate
  "PGH", # pygrep-hooks
  "PLC", # Pylint
  "PLE", # Pylint
  "PLR", # Pylint
  "PLW", # Pylint
  # TODO: enable when Juptyer is supported
  # https://github.com/charliermarsh/ruff/issues/1079
  # "ICN", # flake8-import-conventions
  "RUF", # Ruff-specific rules
]
src = ["src", "tests"]
target-version = "py37"

[tool.ruff.per-file-ignores]
"noxfile.py" = ["ANN"]
"tests/*" = [
  "ARG00",
  "C901",
  "FBT",
  "S101",
  "S105",
  "S106",
  "ANN",
]

[tool.ruff.flake8-quotes]
docstring-quotes = "double"
inline-quotes = "double"
multiline-quotes = "double"

[tool.ruff.flake8-annotations]
allow-star-arg-any = true
mypy-init-return = true
suppress-dummy-args = true

[tool.ruff.isort]
known-first-party = ["citric"]

[tool.ruff.mccabe]
max-complexity = 5

[build-system]
build-backend = "poetry.masonry.api"
requires = ["poetry>=0.12"]
